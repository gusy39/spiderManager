<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:jdbc="http://www.springframework.org/schema/jdbc"
        xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- <bean id="redisSentinelConfiguration"
           class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
         <property name="master">
             <bean class="org.springframework.data.redis.connection.RedisNode">
                 <property name="name" value="mymaster"></property>
             </bean>
         </property>
         <property name="sentinels">
             <set>
                 <bean class="org.springframework.data.redis.connection.RedisNode">
                     <constructor-arg index="0" value="10.6.1**.**5"/>
                     <constructor-arg index="1" value="7031"/>
                 </bean>
                 <bean class="org.springframework.data.redis.connection.RedisNode">
                     <constructor-arg index="0" value="10.6.1**.**6"/>
                     <constructor-arg index="1" value="7031"/>
                 </bean>
                 <bean class="org.springframework.data.redis.connection.RedisNode">
                     <constructor-arg index="0" value="10.6.1**.**1"/>
                     <constructor-arg index="1" value="7031"/>
                 </bean>
             </set>
         </property>
     </bean>-->

    <!-- 对象池配置： -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <bean id="jedisConnFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.pool.hostName}"/>
        <property name="port" value="${redis.pool.port}"/>
        <property name="usePool" value="true"/>
        <constructor-arg ref="jedisPoolConfig"/>
    </bean>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnFactory"/>
        <!-- <property name="enableTransactionSupport" value="true"/>-->
    </bean>
    <bean id="jsonRedisTemplate" class="com.ecmoho.token.Jackson2JsonRedisTemplate">
        <property name="connectionFactory" ref="jedisConnFactory"/>
        <!-- <property name="enableTransactionSupport" value="true"/>-->
    </bean>
    <!--<bean id="objRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
        <!--<property name="connectionFactory" ref="jedisConnFactory"></property>-->
        <!--<property name="keySerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
        <!--</property>-->
        <!--<property name="valueSerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 内存缓存提供  -->
    <bean id="memoryCacheProvider" class="com.ecmoho.cache.MemoryCacheProvider">
    </bean>

    <bean id="rediscacheProvider" class="com.ecmoho.cache.RedisCacheProvider">
        <property name="cache" ref="jsonRedisTemplate"/>
    </bean>

    <bean id="redisSessionCache" class="com.ecmoho.token.RedisSessionCache">
        <property name="redisTemplate" ref="jsonRedisTemplate"/>
    </bean>

    <bean class="com.ecmoho.base.test.TestTask" init-method="init"
          destroy-method="destroy" lazy-init="false">
        <property name="redisCacheProvider" ref="rediscacheProvider"/>
        <property name="IntervalTime" value="${testTask.intervalTime}"/>
    </bean>
</beans> 